# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sF9L0vZc9c8-KgEaO87DJDBuOwPIUn4I
"""

def message (number):
  print ("Enter a number:", number)

number = 1234
message (1)
print (number)

def message (what, number):
  print ("Enter", what, "number", number)

#invoke the function
message ("telephone", 11)
message ("price", 5)
message ("number", "number")

def my_function (a,b,c):
  print (a,b,c)
my_function(1,2,3)

def introduction (first_name, last_name):
  print ("Hello, my name is", first_name, last_name)

introduction ("Skywalker","Luke" )
introduction ("QUick", "Jesse")
introduction ("Kent", "Clark")

def introduction (first_name, last_name):
  print ("Hello, my name is", first_name, last_name)

introduction ("Luke","Skywalker" )
introduction ( "Jesse","QUick")
introduction ( "Clark","Kent")

def introduction (first_name, last_name):
  print ("Hello, my name is", first_name, last_name)

introduction (first_name= "James",last_name="Bond")
introduction (first_name= "Skywalker",last_name= "Luke")

def adding (a,b,c):
  print (a, "+",c,"=",a+b+c)

#call the adding function here.
adding (1,2,3)
adding (c=1,a=2,b=3)
adding (3, c=1,b=3)
adding (4,3,c=2)

def list_sum(lst):
  s = 0 

  for elem in lst:
    s += elem 
  
  return s
print (list_sum([5,4,3]))

def list_sum(lst):
  s = 0 

  for elem in lst:
    s += elem 
  
  return s
print (list_sum([5]))

def strange_list_fun(n):
  strange_list = []

  for i in range (0,n):
    strange_list.insert (0,1)
  return strange_list

print (strange_list_fun(5))

def bmi (weight, height):
  return weight/height**2

print (bmi(52.5,1.65))

def is_a_triangle (a,b,c):
  if a+b <= c:
    return False
  if b+c <= a:
    return False 
  if c+a <= b:
    return False
  return True

print (is_a_triangle(1,1,1))
print (is_a_triangle(1,1,3))

def is_a_triangle (a,b,c):
  return a+b > c and b+c>a and c+a>b

print (is_a_triangle(1,1,1))
print (is_a_triangle(1,1,3))

def is_a_triangle (a,b,c):
  if a+b <=c or b+c<=a and c+a<=b:
    return False
  return True

print (is_a_triangle(1,1,1))
print (is_a_triangle(1,1,3))

def is_a_triangle (a,b,c):
  return a+b > c and b+c>a and c+a>b

def heron (a,b,c):
  p = (a+b+c)/2
  return (p*(p-a)*(p-b)*(p-c))**0,5

def area_of_triangle (a,b,c):
  if not is_a_triangle(a,b,c):
    return None
  return heron (a,b,c)

print (area_of_triangle(1.,1., 2.**.5))

my_tuple = tuple((1,2,"string"))
print (my_tuple)

my_list = [2,4,6]
print (my_list) 
print (type(my_list))
tup = tuple(my_list)
print (tup)
print (type(tup))

my_tuple = (1,10,100)

t1 = my_tuple + (1000,10000)
t2 = my_tuple*3

print (len(t2))
print (t1)
print (t2)
print (10 in my_tuple)
print (-10 not in my_tuple)

dictionary = {"cat":"chat","dog":"chien","horse":"cheval"}
phone_numbers = {'boss':551234567,'Suzy':22657854310}
empty_dictionary={}

#Print the values here.
print (dictionary['cat'])
print (phone_numbers['Suzy'])

dictionary = {"cat":"chat","dog":"chien","horse":"cheval"}

for key in dictionary.keys():
  print (key, "->", dictionary[key])

dictionary = {"cat":"chat","dog":"chien","horse":"cheval"}
words = ['cat','lion','horse']

for word in words:
  if word in dictionary:
    print (word, "->", dictionary [word])
  else:
    print (word, "is not in dictionary")

while True:
  name = input("Enter the student's name: ")
  if name == ' ':
    break

  score = int(input("Enter the student's score 0-10:"))
  if score not in range (0,11):
    break
  if name in school_class:
    school_class[name] += (score,)
  else:
    school_class[name] = (score,)

for name in sorted(school_class.keys()):
  adding = 0 
  counter = 0
  for score in school_class[name]:
    adding += score
    counter += 1
  print (name, ":", adding/counter)

try:
  value = int(input('Enter a natural number: '))
  print ('The receprocal of',value, 'is',1/value)
except:
  print('I do not know what to do.')

while True:
  try:
    number = int(input("Enter an int number: "))
    print (5/number)
    break
  except ValueError:
    print ("Sorry, I cannot divide by zero.")
  except:
    print ("I don't know what to do...")

try:
  value = int(input("Enter a value: "))
  print (value/value)
except ValueError:
  print ("Bad input...")
except ZeroDivisionError:
  print ("Very bad input...")
except:
  print('Brooo!')